user nginx;
worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging settings
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   '$request_time $upstream_response_time';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Cache configuration
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_valid 200 5m;  # Cache successful responses for 5 minutes
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    proxy_cache_lock on;

    # Load balance configuration - upstream servers
    upstream command-service {
        least_conn;  # Load balancing method
        server ${COMMAND_SERVICE_HOST_1}:${COMMAND_SERVICE_PORT_1} max_fails=3 fail_timeout=30s;
        server ${COMMAND_SERVICE_HOST_2}:${COMMAND_SERVICE_PORT_2} max_fails=3 fail_timeout=30s backup;
    }

    upstream query-service {
        least_conn;  # Load balancing method
        server ${QUERY_SERVICE_HOST_1}:${QUERY_SERVICE_PORT_1} max_fails=3 fail_timeout=30s;
        server ${QUERY_SERVICE_HOST_2}:${QUERY_SERVICE_PORT_2} max_fails=3 fail_timeout=30s backup;
    }

    # Server configuration
    server {
        listen 80;
        listen [::]:80;
        server_name ${SERVER_NAME};

        # Security headers
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header Content-Security-Policy "default-src 'self'";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Health check endpoint
        location = /health {
            access_log off;
            add_header Content-Type application/json;
            return 200 '{"status":"UP","timestamp":"${time_iso8601}"}';
        }

        # Command service endpoints
        location /api/commands/ {
            proxy_pass http://command-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Avoid caching command (write) operations
            proxy_no_cache 1;
            proxy_cache_bypass 1;

            # Timeout settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Health check specific route
            location = /api/commands/actuator/health {
                proxy_pass http://command-service/actuator/health;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                access_log off;
                proxy_cache_bypass 1;
                proxy_no_cache 1;
            }
        }

        # Query service endpoints
        location /api/queries/ {
            proxy_pass http://query-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Enable caching for query (read) operations
            proxy_cache api_cache;
            proxy_cache_valid 200 5m;  # Cache successful responses for 5 minutes
            add_header X-Cache-Status $upstream_cache_status;  # Indicate if response was cached
            
            # Skip cache for requests with authorization header
            proxy_cache_bypass $http_authorization;
            
            # Timeout settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Health check specific route
            location = /api/queries/health {
                proxy_pass http://query-service/health;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                access_log off;
                proxy_cache_bypass 1;
                proxy_no_cache 1;
            }
        }

        # Deny access to dot files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}