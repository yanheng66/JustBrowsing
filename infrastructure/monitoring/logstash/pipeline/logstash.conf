input {
  beats {
    port => 5044
  }
  tcp {
    port => 5000
    codec => json
  }
  udp {
    port => 5000
    codec => json
  }
}

filter {
  if [type] == "container" {
    # Parse container logs
    if [log] =~ "^{" {
      json {
        source => "log"
      }
    }
    
    # Add service name based on container name
    if [container][name] {
      mutate {
        add_field => { "service" => "%{[container][name]}" }
      }
    }

    # Handle Spring Boot logs
    if [service] == "command-service" {
      grok {
        match => { "message" => "%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{LOGLEVEL:level}%{SPACE}%{NOTSPACE:thread}%{SPACE}%{NOTSPACE:class}%{SPACE}:\s*%{GREEDYDATA:log_message}" }
      }
      date {
        match => [ "timestamp", "ISO8601" ]
        target => "@timestamp"
      }
    }

    # Handle Go logs (JSON format)
    if [service] == "query-service" {
      if [level] {
        mutate {
          rename => { "level" => "log_level" }
          rename => { "msg" => "log_message" }
        }
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch-logs:9200"]
    index => "filebeat-%{+YYYY.MM.dd}"
  }
}